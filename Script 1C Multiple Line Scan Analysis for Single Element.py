# -*- coding: utf-8 -*-

import ElementalExcessFunctions 
'''
This script can be utilized to calculate the elemental excess for multiple line scans with single elemental components. 
By default this script centers the line scan on the main element being analyzed. 
To center the line scans using an element different than the analyzed line scan, see Script 1D. 


The assumed line scan input structure is a text file with two columns corresponding the element. 
There will be X number of line scans in total.  

    -Column 1: position in units of m
    -Column 2: concentration one element in units of atomic fraction
    
Line Scan name structure is:  filename + "_line" + str(linenumber) + "-" + element
    Example: EDSScanData/0001_line1_Cr.txt, EDSScanData/0001_line1_Fe.txt, EDSScanData/0001_line1_Ni.txt
    
This script utilzies a number of functions written in ElementalExcessFunctions.py. Refer to the file for more guidance as needed.

The outputs for this script include:

    FIVE PLOTS
        - 1: /EDSPLOTS/fullfilename-1_initial_profile.png
        - 2: /EDSPLOTS/fullfilename-2_profile_converted.png
        - 3: /EDSPLOTS/fullfilename-3_profile_converted_GB_centered.png
        - 4: /EDSPLOTS/fullfilename-4_profile_converted_GB_centered_minusbulkavg_integrated_bounds_at_maxormin.png
        - 5: /ELEMETALEXCESSPLOTS/fullfilename.png
    
    THREE TEXT FILES
        - EDSMINMAXDATA/fullfilename_EDSMinMaxData.txt
        - ELEMENTALEXCESSDATA/fullfilename_ELEMENTALEXCESSData.txt corresponds to the plot # 5
        - ELEMENTALEXCESSMINMAXDATA/fullfilename_ELEMENTALEXCESSMinMaxData.txt corresponds to the extrema elemental excess plotted in plot 5
    

To use, fill out the below entries and run script. 
'''



## File Organization Terms ##

ANALYSISPATH = ""                         # ENTER THE PATH WHERE YOU WISH THE DATA GENERATED BY THIS SCRIPT TO BE SAVED
datafolder = ""                           # ENTER THE DIRECTORY PATH WHERE THE LINE SCAN DATA IS BEING STORED
filename = ""                             # ENTER THE NAME OF THE LINE SCAN FILE, OMITTING THE LINE NUMBER AND ELEMENT, NOTE: SEE ABOVE FOR FILE NAMING ASSUMPTIONS
totallinenumber =                         # ENTER THE TOTAL NUMBER OF LINE SCANS; THIS SCRIPT WILL CYCLE THROUGH AND ANALYZE ALL LINE SCANS


## Material Specific Information ##
atomicvolume =                            # ENTER THE ATOMIC VOLUME OF THE MATERIAL; THIS IS NECESSARY TO CONVERT FROM ATOMIC PERCENT TO ATOMS/NM3


## User Directives for Analysis
L_guess_nm_alongline =                    # ENTER A BEST GUESS FOR THE LOCATION OF THE GB ALONG THE LINE SCAN
weight =                                  # ENTER A WEIGHTING TO HELP ADJUST THE RANGE AROUND THE L_guess_nm_alongline WHERE THE LOCAL MIN/MAX CONCENTRATION WILL BE POTENTIALLY LOCATED
fraction =                                # ENTER A FRACTION; THIS HELPS DEFINE WHAT PORTION OF THE LINE SCAN IS USED TO FIND AN AVERAGE CONCENTRATION. EXAMPLE: 0.3 MEANS THAT THE FIRST 30% AND LAST 30% OF THE LINE SCAN WILL BE UTILIZED TO FIND THIS AVERAGE


linescanhalfdistance =                    # ENTER THE DISTANCES YOU WANT THE INTEGRATION BOUNDS TO EXTEND TO
integratecutoff =                         # ENTER THE DESIRED INTEGRATION BOUNDARY DISTANCE THE LOCAL ELEMENTAL EXCESS EXTREMA IS LOCATED FROM; CAN BE TYPICALLY THE SAME AS linescanhalfdistance

## Element Info ##
mainelement = ""                          # ENTER THE ELEMENT BEING INVESTIGATED 
expectedminormax = ""                     # ENTER WHETHER THE MAIN ANALYZED ELEMENT IS EXPECTED TO HAVE A LOCAL MIN OR MAX AT THE GB. options: "min" and "max"
centerelement = mainelement               # ASSUMED TO BE THE SAME AS THE MAIN ELEMENT BEING ANALYZED. WORKS IF THE LOCAL MIN/MAX IS EASILY IDENTIFED
centerelementexpectedminormax = expectedminormax # ASSUMED TO BE THE SAME AS THE MAIN ELEMENT
plotcolor = ""                            # ENTER THE COLOR YOU WANT THE PLOT TO BE


## Adjusting the run ##
viewplots = "no"                          # ENTER "yes" IF YOU WANT TO SEE THE PLOTS INTERACTIVELY; ENTER "no" IF YOU DO NOT. OPTING YES COULD BE MEMORY INTENSIVE.



'''
OPTION 1C: SINGLE ELEMENT, MULTIPLE LINE SCANS
Can be used to process multiple elemental line scans corresponding to the same spatial area 
The grain boundary will be identified and centered by the local min/max concentration of that specific element. 
'''

ElementalExcessFunctions.analysis_usingmultiplelinescans(ANALYSISPATH, datafolder, filename, mainelement, expectedminormax, centerelement, centerelementexpectedminormax, totallinenumber, plotcolor,  atomicvolume, L_guess_nm_alongline, weight, fraction, linescanhalfdistance, integratecutoff, viewplots)


